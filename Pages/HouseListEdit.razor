@page "/houselistedit"
@page "/houselistedit/{id:int}"
@inject IHouseService HouseService

@if (Id == null)
{
    <h3>Create a new House listing</h3>
}
else
{
    <h3>Edit "@house.City"</h3>
}

<EditForm Model="house" OnSubmit="HandleSubmit">
    <div>
        <label for="city">City</label>
        <InputText id="City" @bind-Value="house.City" class="form-control"></InputText>
    </div>
    <div>
        <label for="status">Status</label>
        <InputText id="status" @bind-Value="house.Status" class="form-control"></InputText>
    </div>
    <div>
        <label for="year">Year</label>
        <InputDate id="year" @bind-Value="house.Year" class="form-control"></InputDate>
    </div>
    <br />
    <button type="submit" class="btn btn-primary">@btnText</button>
    @if (Id != null)
    {
        <button type="button" class="btn btn-danger" @onclick="DeleteHouse">Delete House</button>
    }
</EditForm>

@code {
    [Parameter]
    public int? Id { get; set; }

    string btnText = string.Empty;

    House house = new House();

    protected override void OnInitialized()
    {
        btnText = Id == null ? "Save New House" : "Update House";
    }

    protected override async Task OnParametersSetAsync()
    {
        if (Id != null)
        {
            house = await HouseService.GetSingleHouse((int)Id);
        }
    }

    async Task HandleSubmit()
    {
        if (Id == null)
        {
            await HouseService.CreateHouse(house);
        }
        else
        {
            await HouseService.UpdateHouse(house, (int)Id);
        }
    }

    async Task DeleteHouse()
    {
        await HouseService.DeleteHouse(house.Id);
    }
}
